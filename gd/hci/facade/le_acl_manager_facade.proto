syntax = "proto3";

package bluetooth.hci;

import "google/protobuf/empty.proto";
import "facade/common.proto";

service LeAclManagerFacade {
  rpc CreateConnection(LeConnectionMsg) returns (stream LeConnectionEvent) {}
  rpc CancelConnection(LeConnectionMsg) returns (google.protobuf.Empty) {}
  rpc Disconnect(LeHandleMsg) returns (google.protobuf.Empty) {}
  rpc SendAclData(LeAclData) returns (google.protobuf.Empty) {}
  rpc FetchAclData(google.protobuf.Empty) returns (stream LeAclData) {}
  rpc FetchIncomingConnection(google.protobuf.Empty) returns (stream LeConnectionEvent) {}
  rpc SetInitiatorAddress(bluetooth.facade.BluetoothAddressWithType) returns (google.protobuf.Empty) {}
  rpc SetPrivacyPolicyForInitiatorAddress(PrivacyPolicy) returns (google.protobuf.Empty) {}
}

message LeHandleMsg {
  uint32 handle = 1;
}

message LeConnectionMsg {
  uint32 address_type = 1;
  bytes address = 2;
}

message LeConnectionEvent {
  bytes event = 1;
}

message LeAclData {
  uint32 handle = 1;
  bytes payload = 2;
}

enum AddressPolicy {
  POLICY_NOT_SET = 0x00;
  USE_PUBLIC_ADDRESS = 0x01;
  USE_STATIC_ADDRESS = 0x02;
  USE_NON_RESOLVABLE_ADDRESS = 0x03;
  USE_RESOLVABLE_ADDRESS = 0x04;
}

message PrivacyPolicy {
  AddressPolicy address_policy = 1;
  facade.BluetoothAddressWithType address_with_type = 2;
  bytes rotation_irk = 3;
  uint64 minimum_rotation_time = 4;
  uint64 maximum_rotation_time = 5;
}
